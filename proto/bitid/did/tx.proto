syntax = "proto3";
package bitid.did;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "bitid/did/params.proto";

option go_package = "github.com/SamuelReeder/BitID/x/did/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // DefineDIDDocument defines a method for creating or updating a DID document.
  // rpc DefineDIDDocument(MsgDefineDIDDocument) returns (MsgDefineDIDDocumentResponse);

  // RemoveDIDDocument defines a method for removing a DID document.
  // rpc RemoveDIDDocument(MsgRemoveDIDDocument) returns (MsgRemoveDIDDocumentResponse);

  // Additional methods for your DID module
  // rpc AnotherMethod(MsgAnotherMethod) returns (MsgAnotherMethodResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "bitid/x/did/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}