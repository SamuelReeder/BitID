syntax = "proto3";
package bitid.did;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bitid/did/params.proto";
import "bitid/did/did_document.proto";


option go_package = "github.com/SamuelReeder/BitID/x/did/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/SamuelReeder/BitID/did/params";
  }

  rpc GetDID(QueryGetDIDRequest) returns (QueryGetDIDResponse) {
    option (google.api.http).get = "/SamuelReeder/BitID/did/documents/{creator}";
  }  

  rpc ListDID(QueryListDIDRequest) returns (QueryListDIDResponse) {
    option (google.api.http).get = "/SamuelReeder/BitID/did/documents";
  }


}

message QueryGetDIDRequest {
  string creator = 1;
}

message QueryGetDIDResponse {
  DIDDocument DID = 1 ;
}

message QueryListDIDRequest {
  // string creator = 1;
  // uint64 page = 2;
  // uint64 limit = 3;
}

message QueryListDIDResponse {
  repeated string creators = 1;
  repeated DIDDocument DID = 2;
  // cosmos.base.query.v1beta1.PageResponse page_response = 3;
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

